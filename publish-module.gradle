apply plugin: 'maven-publish'
apply plugin: 'signing'

def sweeprProperties = new Properties()
def sweeprPropertiesFile = rootProject.file("sweepr.properties")

if (sweeprPropertiesFile.exists()) {
    sweeprProperties.load(new FileInputStream(sweeprPropertiesFile))
} else {
    sweeprProperties.setProperty('github.username', System.getenv("GPR_USER") ?: "undefined-user")
    sweeprProperties.setProperty('github.token', System.getenv("GPR_API_KEY") ?: "undefined-token")
}

project.ext.sweeprProperties = sweeprProperties

tasks.configureEach { task ->
    if (task instanceof AbstractPublishToMaven) {
        task.dependsOn assemble
    }
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
    }
}

artifacts {
    //archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = mavenCentralVersion

android {
    publishing {
        singleVariant("release") {
        }
    }
}

publishing {

    repositories {
        maven {
            name = "GitHubPublicPackages"
            url = uri("https://maven.pkg.github.com/sweepr-sdk/android")
            credentials {
                // info: has to check for this property as importing from external app, like: SsoSampleApp failed to parse the file
                username = project.hasProperty("sweeprProperties") ? sweeprProperties["github.username"] : System.getenv("GPR_USER")
                password = project.hasProperty("sweeprProperties") ? sweeprProperties["github.token"] : System.getenv("GPR_API_KEY")
            }
        }

        maven {
            name = "GitHubInternalPackages"
            url = uri("https://maven.pkg.github.com/rosebud-iot/mobile-framework-android")
            credentials {
                // info: has to check for this property as importing from external app, like: SsoSampleApp failed to parse the file
                username = project.hasProperty("sweeprProperties") ? sweeprProperties["github.username"] : System.getenv("GPR_USER")
                password = project.hasProperty("sweeprProperties") ? sweeprProperties["github.token"] : System.getenv("GPR_API_KEY")
            }
        }
    }

    publications {
        release(MavenPublication) {
            afterEvaluate {
                from components.release
            }

            // The coordinates of the library, being set from variables that
            // we'll set up later
            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version mavenCentralVersion

            // artifact("$buildDir/outputs/aar/${project.name}-release.aar")
            //artifact androidSourcesJar

            // Two artifacts, the `aar` (or `jar`) and the sources
            //if (project.plugins.findPlugin("com.android.library")) {
            //    //from components.release
            //} else {
            //    artifact("$buildDir/libs/${project.getName()}-${version}.jar")
            //}


            // Mostly self-explanatory metadata
            pom {
                name = PUBLISH_ARTIFACT_ID
                description = 'Android version of Apple DNSSD Java API'
                url = 'https://github.com/andriydruk/RxDNSSD'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'https://github.com/andriydruk/RxDNSSD/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'andriydruk'
                        name = 'Andrew Druk'
                        email = 'adriy.druk@gmail.com'
                    }
                }

                // Version control info - if you're using GitHub, follow the
                // format as seen here
                scm {
                    connection = 'scm:git:github.com/andriydruk/RxDNSSD.git'
                    developerConnection = 'scm:git:ssh://github.com/andriydruk/RxDNSSD.git'
                    url = 'https://github.com/andriydruk/RxDNSSD/tree/master'
                }
            }
        }
    }
}

ext["signing.keyId"] = rootProject.ext["signing.keyId"]
ext["signing.password"] = rootProject.ext["signing.password"]
ext["signing.secretKeyRingFile"] = rootProject.ext["signing.secretKeyRingFile"]

signing {
    //sign publishing.publications
}